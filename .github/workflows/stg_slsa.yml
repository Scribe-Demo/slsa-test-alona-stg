name: slsa_stg_valint
on: 
#     push:
    workflow_dispatch:

env:
  SCRIBE_URL: "https://api.staging.hub.scribesecurity.com/scribe-proxy"
  SCRIBE_LOGIN_URL: "https://scribesecurity-staging.us.auth0.com"
  SCRIBE_AUDIENCE: "api.staging.scribesecurity.com"

jobs:
   scribe-report-test:
    runs-on: ubuntu-latest
    permissions:
     id-token: write
    
    steps:
  
      - name: create file and Docker
        run: | 
          echo `date` > tmp.txt
          echo "FROM scratch" > Dockerfile
          echo "COPY . ." >> Dockerfile
          docker build -t date:latest .
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/checkout@v3
        with:
          repository: mongo-express/mongo-express
          ref: refs/tags/v1.0.0-alpha.4
          path: mongo-express-scm

      - name: Scm generate bom, upload to scribe
        id: valint_bom_scm
        uses: scribe-security/action-bom@master
        with:
           type: dir
           target: 'mongo-express-scm'
           scribe-enable: true
           verbose: 2
#            product-key: ${{ secrets.SCRIBE_STG_PRODUCT_KEY }}
           product-key: "00_new_slsa"
           scribe-client-id: ${{ secrets.SCRIBE_STG_CLIENT_ID }}
           scribe-client-secret: ${{ secrets.SCRIBE_STG_CLIENT_SECRET }}
           scribe-url: ${{ env.SCRIBE_URL }}
           scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
           scribe-audience: ${{ env.SCRIBE_AUDIENCE }}

      # Build and push your image - this example skips this step as we're using the published mongo express.

      - name: Image generate bom, upload to scribe
        id: valint_bom_image
        uses: scribe-security/action-bom@master
        with:
          type: docker # To be included only if you want to to use docker daemon to access the image (for example, creating your docker image locally)
          target: date:latest
          scribe-enable: true
          verbose: 2
#           product-key: ${{ secrets.SCRIBE_DEV_PRODUCT_KEY }}
          pproduct-key: "00_new_slsa"
          scribe-client-id: ${{ secrets.SCRIBE_STG_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_STG_CLIENT_SECRET }}
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }

      - uses: actions/upload-artifact@v2
        with:
          name: scribe-reports
          path: |
            ${{ steps.valint_bom_scm.outputs.OUTPUT_PATH }}
            ${{ steps.valint_bom_image.outputs.OUTPUT_PATH }}
            
             - uses: actions/checkout@v2
              with:
              fetch-depth: 0
              
      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
        uses: scribe-security/action-bom@master
        with:
          type: docker
          target: 'date:latest'
          format: statement-slsa
#           product-key: ${{ secrets.SCRIBE_DEV_PRODUCT_KEY }}
          product-key: "00_new_slsa"

      - uses: actions/upload-artifact@v2
        with:
           name: provenance
           path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
